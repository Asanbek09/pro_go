------------------------------------------------// Создание прослушивателя и обработчика HTTP \\------------------------------------------------

ListenAndServe(addr, handler)
Эта функция начинает прослушивать HTTP-запросы по указанному адресу и передает запросы указанному обработчику

ListenAndServeTLS(addr, cert, key, handler)
Эта функция начинает прослушивать HTTPS-запросы. Аргументы - это адрес

ServeHTTP(writer, request)
Этот метод вызывается для обработки HTTP-запроса. Запрос описывается значением Request, 
а ответ записывается с использованием ResponseWriter, оба из которых принимаются в качестве параметров

------------------------------------------------// Проверка запроса \\------------------------------------------------
Method
В этом поле указывается метод HTTP (GET, POST и т. д.) в виде строки. Пакет net/http определяет константы для методов HTTP, 
таких как MethodGet и MethodPost.

URL
Это поле возвращает запрошенный URL-адрес, выраженный в виде URL значения.

Proto
Это поле возвращает string, указывающую версию HTTP, используемую для запроса. Это поле возвращает string, содержащую запрошенный хост.

Host
Это поле возвращает значение Header, которое является псевдонимом для map[string][]string и содержит заголовки запроса. 
Ключи карты — это имена заголовков, а значения — срезы строк, содержащие значения заголовков.

Header
Это поле возвращает строку map[string], содержащую любые дополнительные заголовки, включенные в запрос после тела.

Trailer Body
Это поле возвращает ReadCloser, представляющий собой интерфейс, сочетающий метод Read интерфейса 
Reader с методом Close интерфейса Closer

------------------------------------------------// Использование удобных функций ответа \\------------------------------------------------
Error(writer, message, code)
Эта функция устанавливает для заголовка указанный код, устанавливает для заголовка Content-Type значение text/plain и записывает сообщение об ошибке в ответ. 
Заголовок X-Content-Type-Options также настроен так, чтобы браузеры не могли интерпретировать ответ как что-либо, кроме текста.

NotFound(writer, request)
Эта функция вызывает Error и указывает код ошибки 404

Redirect(writer, request, url, code)
Эта функция отправляет ответ о перенаправлении на указанный URL-адрес и с указанным
кодом состояния.

ServeFile(writer, request, fileName)
Эта функция отправляет ответ, содержащий содержимое указанного файла. Заголовок Content-Type устанавливается на основе имени файла, 
но его можно переопределить, явно установив заголовок перед вызовом функции.

Handle(pattern, handler)
Эта функция создает правило, которое вызывает указанный метод ServeHTTP указанного Handler для запросов, соответствующих шаблону

HandleFunc(pattern, handlerFunc)
Эта функция создает правило, которое вызывает указанную функцию для запросов, соответствующих шаблону. 
Функция вызывается с аргументами ResponseWriter и Request.

FileServer(root)
Эта функция создает Handler, который выдает ответы с помощью функции ServeFile

NotFoundHandler()
Эта функция создает Handler, который выдает ответы с помощью функции NotFound.

RedirectHandler(url, code)
Эта функция создает Handler, который выдает ответы с помощью функции Redirect.

StripPrefix(prefix, handler)
Эта функция создает Handler, который удаляет указанный префикс из URL-адреса запроса и передает запрос указанному Handler

TimeoutHandler(handler, duration, message)
Эта функция передает запрос указанному Handler, но генерирует ответ об ошибке, 
если ответ не был получен в течение указанного времени.

------------------------------------------------// Проверка запроса \\------------------------------------------------
Form
Это поле возвращает строку map[string][]string, содержащую проанализированные данные формы и параметры строки запроса. 
Перед чтением этого поля необходимо вызвать метод ParseForm.

PostForm
Это поле похоже на Form, но исключает параметры строки запроса, поэтому в карте содержатся только данные из тела запроса. 
Перед чтением этого поля необходимо вызвать метод ParseForm.

MultipartForm
Это поле возвращает составную форму, представленную с помощью структуры Form, определенной в пакете mime/multipart. 
Перед чтением этого поля необходимо вызвать метод ParseMultipartForm.

FormValue(key)
Этот метод возвращает первое значение для указанного ключа формы и возвращает пустую строку, если значение отсутствует. 
Источником данных для этого метода является поле Form, а вызов метода FormValue автоматически вызывает 
ParseForm или ParseMultipartForm для анализа формы.

PostFormValue(key)
Этот метод возвращает первое значение для указанного ключа формы и возвращает пустую строку, если значение отсутствует. 
Источником данных для этого метода является поле PostForm, а вызов метода PostFormValue автоматически вызывает 
ParseForm или ParseMultipartForm для анализа формы.

FormFile(key)
Этот метод обеспечивает доступ к первому файлу с указанным в форме ключом. Результатами являются File и FileHeader, 
оба из которых определены в пакете mime/multipart, и error. Вызов этой функции приводит к вызову функций 
ParseForm или ParseMultipartForm для анализа формы.

ParseForm()
Этот метод анализирует форму и заполняет поля Form и PostForm. Результатом является error, которая описывает 
любые проблемы синтаксического анализа.

ParseMultipartForm(max)
Этот метод анализирует составную форму MIME и заполняет поле MultipartForm. Аргумент указывает максимальное количество байтов, 
выделяемых для данных формы, а результатом является error, описывающая любые проблемы с обработкой формы.

------------------------------------------------// Чтение и настройка файлов cookie \\------------------------------------------------
SetCookie(writer, cookie)
Эта функция добавляет заголовок Set-Cookie к указанному ResponseWriter. 
Файл cookie описывается с помощью указателя на структуру Cookie, которая описана далее

Name
Это поле представляет имя файла cookie, выраженное в виде строки.

Value
Это поле представляет значение файла cookie, выраженное в виде строки.

Path
В этом необязательном поле указывается путь к файлу cookie.

Domain
В этом необязательном поле указывается host/domain, для которого будет установлен файл cookie.

Expires
В этом поле указывается срок действия файла cookie, выраженный в виде значения time.Time.

MaxAge
В этом поле указывается количество секунд до истечения срока действия файла cookie, выраженное как int.

Secure
Когда это bool поле имеет значение true, клиент будет отправлять файл cookie только через соединения HTTPS.

HttpOnly
Когда это bool поле имеет значение true, клиент предотвратит доступ кода JavaScript к файлу cookie.

SameSite
В этом поле указывается политика перекрестного происхождения для файла cookie с использованием констант SameSite, 
которые определяют SameSiteDefaultMode, SameSiteLaxMode, SameSiteStrictMode и SameSiteNoneMode.

Cookie(name)
Этот метод возвращает указатель на значение Cookie с указанным именем и error, 
указывающую на отсутствие соответствующего файла cookie

Cookies()
Этот метод возвращает срез указателей Cookie.