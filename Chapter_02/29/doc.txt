------------------------------------------------// Работа с типами функций \\------------------------------------------------
Методы Type для работы с функциями

NumIn()
Этот метод возвращает количество параметров, определенных функцией.

In(index)
Этот метод возвращает Type, который отражает параметр по указанному индексу.

IsVariadic()
Этот метод возвращает значение true, если последний параметр является вариативным.

NumOut()
Этот метод возвращает количество результатов, определенных функцией.

Out(index)
Этот метод возвращает Type, который отражает результат по указанному индексу.

------------------------------------------------// Работа со значениями функций \\------------------------------------------------
Call(params)
Эта функция вызывает отраженную функцию, используя []Value в качестве параметров. 
Результатом является значение []Value, содержащее результаты функции. Значения, предоставляемые в качестве параметров, 
должны соответствовать значениям, определенным функцией.

------------------------------------------------// Создание и вызов новых типов функций и значений \\------------------------------------------------

FuncOf(params, results, variadic)
Эта функция создает новый Type, который отражает тип функции с указанными параметрами и результатами. 
Последний аргумент указывает, имеет ли тип функции переменный параметр. Параметры и результаты указаны как срезы Type.

MakeFunc(type,fn)
Эта функция возвращает Value, отражающее новую функцию, являющуюся оболочкой функции fn. 
Функция должна принимать срез Value в качестве единственного параметра и возвращать срез Value в качестве единственного результата.

------------------------------------------------// Создание и вызов новых типов функций и значений \\------------------------------------------------
Методы Type для работы с методами

NumMethod()
Этот метод возвращает количество экспортированных методов, определенных для отражаемого типа структуры.

Method(index)
Этот метод возвращает отраженный метод по указанному индексу, представленному структурой Method.

MethodByName(name)
Этот метод возвращает отраженный метод с указанным именем. Результатами являются структура Method и bool значение, 
указывающее, существует ли метод с указанным именем.

Поля, определяемые структурой Method
Name 
Это поле возвращает имя метода в виде строки.

PkgPath
Это поле используется с интерфейсами, как описано в разделе «Работа с интерфейсами», 
а не с методами, доступ к которым осуществляется через тип структуры. Поле возвращает string, содержащую путь к пакету. 
Пустая строка используется для экспортируемых полей и будет содержать имя пакета структуры для неэкспортированных полей.

Type
Это поле возвращает Type, описывающий тип функции метода

Func
Это поле возвращает Value, которое отражает значение функции метода. При вызове метода первым аргументом должна быть структура, 
для которой вызывается метод

Index
Это поле возвращает int, указывающее индекс метода для использования с методом Method

Метод Value для работы с методами
NumMethod()
Этот метод возвращает количество экспортированных методов, определенных для отражаемого типа структуры. 
Он вызывает метод Type.NumMethod.

Method(index)
Этот метод возвращает Value, которое отражает функцию метода по указанному индексу. 
Получатель не указывается в качестве первого аргумента при вызове функции.

MethodByName(name)
Этот метод возвращает Value, которое отражает функцию метода с указанным именем. 
Получатель не указывается в качестве первого аргумента при вызове функции.

------------------------------------------------// Работы с интерфейсами \\------------------------------------------------
Методы Type Methods для интерфейсов
Implements(type)
Этот метод возвращает значение true, если отраженное значение реализует указанный интерфейс, который также представлен Value.

Elem()
Этот метод возвращает Value, которое отражает значение, содержащееся в интерфейсе.

NumMethod()
Этот метод возвращает количество экспортированных методов, определенных для отражаемого типа структуры.

Method(index)
Этот метод возвращает отраженный метод по указанному индексу, представленному структурой Method.

MethodByName(name)
Этот метод возвращает отраженный метод с указанным именем. Результатами являются структура Method и bool значение, 
указывающее, существует ли метод с указанным именем.

------------------------------------------------// Работа с типами каналов \\------------------------------------------------
Методы Type для каналов
ChanDir() Этот метод возвращает значение ChanDir, которое описывает направление канала, используя одно из значений 
Elem() Этот метод возвращает Type, который отражает тип, переносимый каналом.

Значения ChanDir
RecvDir
Это значение указывает, что канал можно использовать для приема данных. 
При выражении в виде строки это значение возвращает <-chan.

SendDir
Это значение указывает, что канал можно использовать для отправки данных. 
При выражении в виде строки это значение возвращает chan<-.

BothDir
Это значение указывает, что канал можно использовать для отправки и получения данных. 
При выражении в виде строки это значение возвращает chan.

------------------------------------------------// Работа со значениями канала \\------------------------------------------------
Метод Value для каналов
Send(val)
Этот метод отправляет значение, отраженное аргументом Value в канале. 
Этот метод блокируется до тех пор, пока значение не будет отправлено.

Recv()
Этот метод получает значение из канала, которое возвращается как Value для рефлексии. 
Этот метод также возвращает bool значение, которое указывает, было ли получено значение, и будет false, если канал закрылся. 
Этот метод блокируется до тех пор, пока не будет получено значение или канал не будет закрыт

TrySend(val)
Этот метод отправляет указанное значение, но не блокируется. Логический результат указывает, было ли отправлено значение

TryRecv()
Этот метод пытается получить значение из канала, но не блокируется. Результатом является Value, отражающее полученное значение, 
и bool значение, указывающее, было ли получено значение.

Close()
Этот метод закрывает канал.

------------------------------------------------// Создание новых типов и значений каналов \\------------------------------------------------
Функции пакета reflect для создания типов и значений каналов

ChanOf(dir, type)
Эта функция возвращает Type, который отражает канал с указанным направлением и типом данных, 
которые выражаются с помощью ChanDir и Value.

MakeChan(type, buffer) 
Эта функция возвращает Value, отражающее новый канал, созданный с использованием указанного Type и размера буфера int.