------------------------------------------------// Использование групп ожидания \\------------------------------------------------
Методы, определяемые структурой WaitGroup
Add(num) - Этот метод увеличивает количество горутин, которые ожидает WaitGroup, на указанное int.
Done() - Этот метод уменьшает количество горутин, которые ожидает WaitGroup, на одну.
Wait() - Этот метод блокируется до тех пор, пока метод Done не будет вызван один раз для
общего числа горутин, указанного вызовами метода Add.

------------------------------------------------// Использование взаимного исключения \\------------------------------------------------
Методы, определяемые структурой Mutex
Lock() - Этот метод блокирует Mutex. Если Mutex уже заблокирован, этот метод блокируется до тех пор, пока он не будет разблокирован.
Unlock() - Этот метод разблокирует Mutex.

------------------------------------------------// Использование мьютекса чтения-записи \\------------------------------------------------
Методы, определенные RWMutex
RLock() - Этот метод пытается получить блокировку чтения и будет блокироваться до тех пор, пока она не будет получена.
RUnlock() - Этот метод снимает блокировку чтения.
Lock() - Этот метод пытается получить блокировку записи и будет блокироваться, пока она не будет получена.
Unlock() Этот метод снимает блокировку записи.
RLocker() - Этот метод возвращает указатель на Locker для получения и снятия блокировки чтения

RWMutex не так сложен, как может показаться. Вот правила, которым следует RWMutex:
- Если RWMutex разблокирован, то блокировку может получить читатель (вызвав метод RLock) или писатель (вызвав метод Lock).
- Если блокировка получена читателем, другие читатели также могут получить блокировку, вызвав метод RLock, 
который не будет блокироваться. Метод Lock будет блокироваться до тех пор, пока все считыватели не снимут блокировку,
вызвав метод RUnlock.
- Если блокировка получена модулем записи, то оба метода RLock и Lock будут заблокированы, 
чтобы предотвратить получение блокировки другими горутинами до тех пор, пока не будет вызван метод Unlock.
- Если блокировка получена модулем чтения, а модуль записи вызывает метод Lock, оба метода Lock и RLock будут блокироваться до тех пор, 
пока не будет вызван метод Unlock. Это предотвращает постоянную блокировку мьютекса читателями, 
не давая шанса писателям получить блокировку записи.

------------------------------------------------// Использование условий для координации горутин \\------------------------------------------------
Функция sync для создания значений Cond
NewCond(*locker) - Эта функция создает Cond, используя указатель на указанный Locker

Методы, определяемые интерфейсом Locker
Lock() - Этот метод получает блокировку, управляемую Locker. 
Unlock() - Этот метод снимает блокировку, управляемую Locker.

Поле и методы, определяемые структурой Cond
L - Это поле возвращает Locker, который был передан функции NewCond и используется для получения блокировки
Wait() - Этот метод снимает блокировку и приостанавливает горутину
Signal() - Этот метод пробуждает одну ожидающую горутину
Broadcast() - Этот метод пробуждает все ожидающие горутины

------------------------------------------------// Обеспечение однократного выполнения функции \\------------------------------------------------
Метод Once
Do(func) - Этот метод выполняет указанную функцию, но только если она еще не была выполнена.