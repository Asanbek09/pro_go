------------------------------------------------// Использование рефлексии \\------------------------------------------------
TypeOf(val)
Эта функция возвращает значение, реализующее интерфейс Type, описывающий тип указанного значения.

ValueOf(val)
Эта функция возвращает структуру Value, которая позволяет проверять указанное значение и управлять им.

------------------------------------------------// Использование основных функций типа \\------------------------------------------------
Интерфейс Type предоставляет основные сведения о типе с помощью методов

Name()
Этот метод возвращает имя типа

PkgPath()
Этот метод возвращает путь пакета для типа. Пустая строка возвращается для встроенных типов, таких как int и bool

Kind()
Этот метод возвращает вид типа, используя значение, которое соответствует одному из постоянных значений, 
определенных пакетом reflect

String()
Этот метод возвращает строковое представление имени типа, включая имя пакета

Comparable()
Этот метод возвращает значение true, если значения этого типа можно сравнить с помощью стандартного оператора сравнения

AssignableTo(type)
Этот метод возвращает значение true, если значения этого типа могут быть присвоены переменным или полям указанного отраженного типа

------------------------------------------------// Использование базовых возможностей Value \\------------------------------------------------
Структура Value определяет методы, которые обеспечивают доступ к основным функциям отражения, включая доступ к базовому значению

Kind()
Этот метод возвращает вид типа значения

Type()
Этот метод возвращает Type для Value

IsNil()
Этот метод возвращает true, если значение равно нулю. Этот метод вызовет панику, если базовое значение не является функцией, 
интерфейсом, указателем, срезом или каналом

IsZero()
Этот метод возвращает значение true, если базовое значение является нулевым значением для своего типа

Bool() 
Этот метод возвращает базовое bool значение. Метод вызывает панику, если Kind базового значения не является Bool.

Int()
Этот метод возвращает базовое значение в виде int64. Метод вызывает панику, если Kind базового значения 
не является Int, Int8, Int16, Int32 или Int64.

Float()
Этот метод возвращает базовое значение в виде float64. Метод вызывает панику, 
если Kind базового значения не равен Float32 или Float64.

Bytes()
Этот метод возвращает базовое значение []byte. Метод вызывает панику, если базовое значение не является байтовым срезом. 

Uint()
Этот метод возвращает базовое значение в виде uint64. Метод вызывает панику, 
если Kind базового значения не является Uint, Uint8, Uint16, Uint32 или Uint64.

String()
Этот метод возвращает базовое значение в виде строки, если значение Kind — String. 
Для других значений Kind этот метод возвращает строку <T Value>, где T — базовый тип, например <int Value>.

Elem()
Этот метод возвращает Value, на которое указывает указатель. Этот метод также можно использовать с интерфейсами.
Этот метод вызывает панику, если Kind базового значения не равен Ptr.

IsValid()
Этот метод возвращает false, если Value является нулевым значением, созданным как Value{}, 
а не полученным, например, с помощью ValueOf. Этот метод не относится к отраженным значениям, 
которые являются нулевым значением их отраженного типа. Если этот метод возвращает false, 
то все остальные методы Value будут паниковать.

------------------------------------------------// Получение базовых значений \\------------------------------------------------
Interface()
Этот метод возвращает базовое значение, используя пустой интерфейс. Этот метод вызывает панику, 
если он используется для неэкспортированных полей структуры.

CanInterface()
Этот метод возвращает значение true, если метод Interface можно использовать без паники

------------------------------------------------// Установка Value с использованием рефлексии \\------------------------------------------------

CanSet()
Этот метод возвращает true, если значение может быть установлено, и false в противном случае

SetBool(val)
Этот метод устанавливает базовое значение в указанное логическое значение

SetBytes(slice)
Этот метод устанавливает базовое значение для указанного байтового среза

SetFloat(val)
Этот метод устанавливает базовое значение в указанное значение float64

SetInt(val)
Этот метод устанавливает базовое значение в указанное значение int64

SetUint(val)
Этот метод устанавливает базовое значение в указанную строку

Set(val)
Этот метод устанавливает базовое значение в базовое значение указанного Value

------------------------------------------------// ППреобразование значений \\------------------------------------------------
ConvertibleTo(type)
Этот метод возвращает значение true, если тип, для которого вызывается метод, может быть преобразован в указанный Type.

Convert(type)
Этот метод выполняет преобразование типа и возвращает Value с новым типом и исходным значением.