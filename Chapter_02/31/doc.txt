go test - запуск теста
go test -v - аргумент -v включает подробный режим, который сообщает о каждом из тестов
go test -v -run "um" - можно использовать для запуска тестов, выбранных по имени
go test -bench . -run notest

------------------------------------------------// Использование тестирования \\------------------------------------------------
T методы для отчет о результатах тестирования

Log(...vals) - Этот метод записывает указанные значения в журнал ошибок теста.
Logf(template, ...vals) - Этот метод использует указанный шаблон и значения для записи сообщения в журнал ошибок теста
Fail() - Вызов этого метода помечает тест как не пройденный, но продолжает выполнение теста.
FailNow() - Вызов этого метода помечает тест как не пройденный и прекращает его выполнение.
Failed() - Этот метод возвращает true, если тест не пройден.
Error(...errs) - Вызов этого метода эквивалентен вызову метода Log, за которым следует метод Fail.
Errorf(template, ...vals) - Вызов этого метода эквивалентен вызову метода Logf, за которым следует метод Fail.
Fatal(...vals) - Вызов этого метода эквивалентен вызову метода Log, за которым следует метод FailNow.
Fatalf(template, ...vals) - Вызов этого метода эквивалентен вызову метода Logf, за которым следует метод FailNow.

------------------------------------------------// Управление выполнением теста \\------------------------------------------------
T методы для управления выполнением теста

Run(name, func) - Вызов этого метода выполняет указанную функцию как подтест. Метод блокируется, 
    пока тест выполняется в собственной горутине, и возвращает bool значение, указывающее, успешно ли прошел тест
SkipNow() - Вызов этого метода останавливает выполнение теста и помечает его как пропущенный.
Skip(...args) - Этот метод эквивалентен вызову метода Log, за которым следует метод SkipNow.
Skipf(template, ...args) - Этот метод эквивалентен вызову метода Logf, за которым следует метод SkipNow
Skipped() - Этот метод возвращает true, если тест был пропущен.

------------------------------------------------// Код бенчмаркинга \\------------------------------------------------
Функции, имя которых начинается с Benchmark, за которым следует термин, начинающийся с прописной буквы, например Sort, 
являются эталонами, выполнение которых рассчитано по времени

Поле, определяемое структурой B
N - В этом поле int указывается, сколько раз функция эталонного теста должна выполнять код, подлежащий измерению

------------------------------------------------// Удаление установки из теста \\------------------------------------------------
Для каждой итерации цикла for функция BenchmarkSort должна генерировать случайные данные, и время, 
затраченное на создание этих данных, включается в результаты теста

B методы для контроля времени
StopTimer() - Этот метод останавливает таймер.
StartTimer() - Этот метод запускает таймер.
ResetTimer() - Этот метод сбрасывает таймер.

Метод ResetTimer полезен, когда эталонный тест требует некоторой первоначальной настройки, а другие методы полезны, 
когда есть накладные расходы, связанные с каждым тестируемым действием.

------------------------------------------------// Выполнение суббенчмаркингов \\------------------------------------------------
B метод для запуска суббенчмарков
Run(name, func) Вызов этого метода выполняет указанную функцию в качестве вспомогательного эталона. 
Метод блокируется во время выполнения эталонного теста

------------------------------------------------// Журналирование данных \\------------------------------------------------
Пакет log предоставляет простой API ведения журнала, который создает записи журнала и отправляет их в io.Writer, 
позволяя приложению генерировать данные журнала, не зная, где эти данные будут храниться

Полезные функции журнала
Output() - Эта функция возвращает Writer, которому будут передаваться сообщения журнала. 
    По умолчанию сообщения журнала записываются в стандартный вывод.
SetOutput(writer) - Эта функция использует указанный Writer для ведения журнала
Flags() - Эта функция возвращает флаги, используемые для форматирования сообщений журнала.
SetFlags(flags) - Эта функция использует указанные флаги для форматирования сообщений журнала
Prefix() - Эта функция возвращает префикс, который применяется к сообщениям журнала. По умолчанию префикса нет.
SetPrefix(prefix) - Эта функция использует указанную строку в качестве префикса для сообщений журнала
Output(depth, message) - Эта функция записывает указанное сообщение в Writer, возвращенный функцией Output, 
    с указанной глубиной вызова, которая по умолчанию равна 2. Глубина вызова используется для управления выбором 
    файла кода и обычно не изменяется
Print(...vals) - Эта функция создает сообщение журнала, вызывая fmt.Sprint и передавая результат функции Output
Printf(template, ...vals) - Эта функция создает сообщение журнала, вызывая fmt.Sprintf и передавая результат функции Output
Fatal(...vals) - Эта функция создает сообщение журнала, вызывая fmt.Sprint, передает результат в функцию Output,
    а затем завершает работу приложения
Fatalf(template, ...vals) - Эта функция создает сообщение журнала, вызывая fmt.Sprintf, передает результат в функцию Output, 
    а затем завершает работу приложения
Panic(...vals) - Эта функция создает сообщение журнала, вызывая fmt.Sprint, а затем передает результат в функцию Output, 
    а затем в функцию panic.
Panicf(template, ...vals) - Эта функция создает сообщение журнала, вызывая fmt.Sprintf, и передает результат в функцию Output, 
    а затем в функцию panic

Константы пакета log
Ldate - Выбор этого флага включает дату в вывод журнала.
Ltime - При выборе этого флага время включается в вывод журнала.
Lmicroseconds - Выбор этого флага включает микросекунды во время
Llongfile - Выбор этого флага включает имя файла кода, включая каталоги, и номер строки, в которой было зарегистрировано сообщение
Lshortfile - Выбор этого флага включает имя файла кода, за исключением каталогов, и номер строки, 
    в которой было зарегистрировано сообщение
LUTC - При выборе этого флага для даты и времени используется UTC вместо местного часового пояса
Lmsgprefix - При выборе этого флага префикс перемещается из его позиции по умолчанию, которая находится в начале сообщения журнала, 
    непосредственно перед строкой, переданной функции Output
LstdFlags - Эта константа представляет формат по умолчанию, который выбирает Ldate и Ltime.

------------------------------------------------// Создание пользовательских регистраторов \\------------------------------------------------
Функция пакета log для пользовательского ведения журнала
New(writer, prefix, flags) - Эта функция возвращает Logger, который будет записывать сообщения в указанный Writer, 
    настроенный с указанным префиксом и флагами