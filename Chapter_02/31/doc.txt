go test - запуск теста
go test -v - аргумент -v включает подробный режим, который сообщает о каждом из тестов
go test -v -run "um" - можно использовать для запуска тестов, выбранных по имени
go test -bench . -run notest

------------------------------------------------// Использование тестирования \\------------------------------------------------
T методы для отчет о результатах тестирования

Log(...vals) - Этот метод записывает указанные значения в журнал ошибок теста.
Logf(template, ...vals) - Этот метод использует указанный шаблон и значения для записи сообщения в журнал ошибок теста
Fail() - Вызов этого метода помечает тест как не пройденный, но продолжает выполнение теста.
FailNow() - Вызов этого метода помечает тест как не пройденный и прекращает его выполнение.
Failed() - Этот метод возвращает true, если тест не пройден.
Error(...errs) - Вызов этого метода эквивалентен вызову метода Log, за которым следует метод Fail.
Errorf(template, ...vals) - Вызов этого метода эквивалентен вызову метода Logf, за которым следует метод Fail.
Fatal(...vals) - Вызов этого метода эквивалентен вызову метода Log, за которым следует метод FailNow.
Fatalf(template, ...vals) - Вызов этого метода эквивалентен вызову метода Logf, за которым следует метод FailNow.

------------------------------------------------// Управление выполнением теста \\------------------------------------------------
T методы для управления выполнением теста

Run(name, func) - Вызов этого метода выполняет указанную функцию как подтест. Метод блокируется, 
    пока тест выполняется в собственной горутине, и возвращает bool значение, указывающее, успешно ли прошел тест
SkipNow() - Вызов этого метода останавливает выполнение теста и помечает его как пропущенный.
Skip(...args) - Этот метод эквивалентен вызову метода Log, за которым следует метод SkipNow.
Skipf(template, ...args) - Этот метод эквивалентен вызову метода Logf, за которым следует метод SkipNow
Skipped() - Этот метод возвращает true, если тест был пропущен.

------------------------------------------------// Код бенчмаркинга \\------------------------------------------------
Функции, имя которых начинается с Benchmark, за которым следует термин, начинающийся с прописной буквы, например Sort, 
являются эталонами, выполнение которых рассчитано по времени

Поле, определяемое структурой B
N - В этом поле int указывается, сколько раз функция эталонного теста должна выполнять код, подлежащий измерению

------------------------------------------------// Удаление установки из теста \\------------------------------------------------
Для каждой итерации цикла for функция BenchmarkSort должна генерировать случайные данные, и время, 
затраченное на создание этих данных, включается в результаты теста

B методы для контроля времени
StopTimer() - Этот метод останавливает таймер.
StartTimer() - Этот метод запускает таймер.
ResetTimer() - Этот метод сбрасывает таймер.

Метод ResetTimer полезен, когда эталонный тест требует некоторой первоначальной настройки, а другие методы полезны, 
когда есть накладные расходы, связанные с каждым тестируемым действием.