Кто они такие?
Структуры — это типы данных, состоящие из полей.

Почему они полезны?
Структуры позволяют определять пользовательские типы данных.

Как они используются?
Ключевые слова type и struct используются для определения типа, позволяя указывать имена полей и типы.

Есть ли подводные камни или ограничения?
Необходимо соблюдать осторожность, чтобы избежать непреднамеренного дублирования значений структуры и убедиться,
 что поля, в которых хранятся указатели, инициализированы до их использования.

Есть ли альтернативы?
Простые приложения могут использовать только встроенные типы данных, но большинству приложений потребуется 
определить пользовательские типы, для которых структуры являются единственным вариантом.

Go не позволяет использовать структуры с ключевым словом const, и компилятор сообщит об ошибке, если вы попытаетесь определить
константную структуру. Для создания констант можно использовать только типы данных, описанные в главе 9

ПОНИМАНИЕ ТЕГОВ СТРУКТУРЫ
Тип структуры можно определить с помощью тегов, которые предоставляют дополнительную информацию о том, как следует обрабатывать поле. 
Теги структуры — это просто строки, которые интерпретируются кодом, обрабатывающим значения структуры, с использованием функций, 
предоставляемых пакетом reflect. См. в главе 21 пример того, как можно использовать теги структур для изменения 
способа кодирования структур в данных JSON, и см. в главе 28 сведения о том, как самостоятельно получить доступ к тегам структур.

ИСПОЛЬЗОВАНИЕ ФУНКЦИИ NEW ДЛЯ СОЗДАНИЯ СТРУКТУРНЫХ ЗНАЧЕНИЙ
Вы можете увидеть код, который использует встроенную функцию new для создания значений структуры, например:
...
var lifejacket = new(Product) ...
Результатом является указатель на значение структуры, поля которого инициализируются нулевым значением их типа. Это эквивалентно этому утверждению:
...
var lifejacket = &Product{}
...
Эти подходы взаимозаменяемы, и выбор между ними является вопросом предпочтения.