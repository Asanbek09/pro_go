build
Команда go build компилирует исходный код в текущем каталоге и создает исполняемый файл, как описано в разделе
 «Компиляция и запуск исходного кода».

clean
Команда go clean удаляет выходные данные, созданные командой go build, 
включая исполняемый файл и любые временные файлы, созданные во время сборки, как описано в разделе
 «Компиляция и запуск исходного кода».

doc 
Команда go doc генерирует документацию из исходного кода. Смотрите простой пример в разделе «Линтинг кода Go».

fmt 
Команда go fmt обеспечивает согласованный отступ и выравнивание в файлах исходного кода, как описано 
в разделе «Форматирование кода Go».

get 
Команда go get загружает и устанавливает внешние пакеты, как описано в главе 12.

install 
Команда go install загружает пакеты и обычно используется для установки пакетов инструментов, 
как показано в разделе «Отладка кода Go».

mod 
Команда go mod используется для создания модуля Go и управления им, как показано в разделе 
«Определение модуля» и более подробно описано в главе 12.

test 
Команда go test выполняет модульные тесты, как описано в Uлаве 31.

version 
Команда go version выводит номер версии Go.

vet 
Команда go vet обнаруживает распространенные проблемы в коде Go, как описано в разделе
 «Устранение распространенных проблем в коде Go».

Инструмент для отладки
go install github.com/go-delve/delve/cmd/dlv@latest

print <expr>
Эта команда оценивает выражение и отображает результат. Его можно использовать для отображения значения 
(print i) или выполнить более сложный тест (print i > 0).

set <variable> = <value>
Эта команда изменяет значение указанной переменной

locals
Эта команда выводит значения всех локальных переменных

whatis <expr>
Эта команда выводит тип указанного выражения, например whatis i

continue Эта команда возобновляет выполнение приложения.
next This command moves to the next statement.
step Эта команда переходит в текущий оператор.
stepout Эта команда выходит за пределы текущего оператора.
restart Эта команда перезапускает процесс. Используйте команду continue, чтобы начать выполнение.
exit Эта команда закрывает отладчик.

Линтер — это инструмент, проверяющий файлы кода с помощью набора правил, описывающих проблемы, вызывающие путаницу, 
приводящие к неожиданным результатам или снижающие читабельность кода
go install github.com/mgechev/revive@latest

для запуска используется команда revive

Команда go vet идентифицирует операторы, которые могут быть ошибочными. В отличие от линтера, 
который часто фокусируется на вопросах стиля, команда go vet находит код, который компилируется, 
но, вероятно, не будет выполнять то, что задумал разработчик

go vet filename.go

go vet -json filename.go
аргумент json генерирует вывод в формате JSON, который
группирует предупреждения по анализатору

Команда go fmt форматирует файлы исходного кода Go для согласованности
go fmt filename.go