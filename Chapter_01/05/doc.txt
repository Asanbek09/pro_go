Понимание операторов Go

+, -, *, /, %
Эти операторы используются для выполнения арифметических операций с числовыми значениями, как описано в разделе 
«Знакомство с арифметическими операторами». Оператор + также можно использовать для объединения строк, 
как описано в разделе «Объединение строк».

==, !=, <, <=, >, >=
Эти операторы сравнивают два значения, как описано в разделе «Общие сведения об операторах сравнения».

||, &&, !
Это логические операторы, которые применяются к bool значениям и возвращают bool значение, 
как описано в разделе «Понимание логических операторов».

=, :=
Это операторы присваивания. Стандартный оператор присваивания (=) используется для установки начального значения 
при определении константы или переменной или для изменения значения, присвоенного ранее определенной переменной. 
Сокращенный оператор (:=) используется для определения переменной и присвоения значения, как описано в главе 4.

-=, +=, ++, --
Эти операторы увеличивают и уменьшают числовые значения, как описано в разделе «Использование операторов увеличения и уменьшения»

&, |, ^, &^, <<, >>
Это побитовые операторы, которые можно применять к целочисленным значениям. Эти операторы не часто требуются в основной разработке,
 но вы можете увидеть пример в главе 31, где оператор | используется для настройки функций ведения журнала Go.


 Понимание операторов сравнения
 ==
 Этот оператор возвращает true, если операнды равны.

!=
Этот оператор возвращает true, если операнды не равны.

< 
Этот оператор возвращает значение true, если первый операнд меньше второго операнда.

> 
Этот оператор возвращает значение true, если первый операнд больше второго операнда.

<=
Этот оператор возвращает значение true, если первый операнд меньше или равен второму операнду.

>=
Этот оператор возвращает значение true, если первый операнд больше или равен второму операнду.

В Go нет тернарного оператора, а это значит, что подобные выражения использовать нельзя:
max := first > second ? first : second


Понимание логических операторов

||
Этот оператор возвращает true (истину), если любой из операндов true. Если первый операнд true, то второй операнд не будет оцениваться.

&&
Этот оператор возвращает true, если оба операнда true. Если первый операнд false, то второй операнд не будет оцениваться

!
Этот оператор используется с одним операндом. Он возвращает true, если операнд false, и false, если операнд true



Функции в пакете math для преобразования числовых типов

Ceil(value)
Эта функция возвращает наименьшее целое число, большее указанного значения с плавающей запятой. 
Например, наименьшее целое число, большее 27.1, равно 28.

Floor(value)
Эта функция возвращает наибольшее целое число, которое меньше указанного значения с плавающей запятой.
Например, наибольшее целое число, меньшее 27.1, равно 28.

Round(value)
Эта функция округляет указанное значение с плавающей запятой до ближайшего целого числа.

RoundToEven(value)
Эта функция округляет указанное значение с плавающей запятой до ближайшего четного целого числа.


Парсинг из строк

ParseBool(str)
Эта функция преобразует строку в логическое значение. Распознаваемые строковые значения: 
"true", "false", "TRUE", "FALSE", "True", "False", "T", "F", "0" и "1".

ParseFloat(str, size)
Эта функция анализирует строку в значение с плавающей запятой указанного размера, как описано в разделе 
«Анализ чисел с плавающей запятой».

ParseInt(str, base, size)
Эта функция анализирует строку в int64 с указанным основанием и размером. Допустимые базовые значения: 
2 для двоичного, 8 для восьмеричного, 16 для шестнадцатеричного и 10, как описано в разделе «Синтаксический анализ целых чисел».

ParseUint(str, base, size) 
Эта функция преобразует строку в целое число без знака с указанным  основанием и размером.

Atoi(str)
Эта функция преобразует строку в целое число с основанием 10 и эквивалентна вызову функции ParseInt(str, 10, 0), 
как описано в разделе «Использование удобной целочисленной функции».


Базовые префиксы для числовых строк Префикс Описание
0b
Этот префикс обозначает двоичное значение, например 0b1100100. 

0o
Этот префикс обозначает восьмеричное значение, например 0o144. 

0x
Этот префикс обозначает шестнадцатеричное значение, например 0x64.


Функции strconv для преобразования значений в строки

FormatBool(val)
Эта функция возвращает строку true или false в зависимости от значения указанного bool значения.

FormatInt(val, base)
Эта функция возвращает строковое представление указанного значения int64, выраженное в указанной системе счисления

FormatUint(val, base)
Эта функция возвращает строковое представление указанного значения uint64, выраженное в указанной базе

FormatFloat(val, format, precision, size)
Эта функция возвращает строковое представление указанного значения float64, 
выраженное с использованием указанного формата, точности и размера

Itoa(val)
Эта функция возвращает строковое представление указанного значения int, выраженное с использованием базы 10.



Обычно используемые параметры формата для форматирования строк с плавающей запятой

f 
Значение с плавающей запятой будет выражено в форме ±ddd.ddd без экспоненты, например 49.95.

e, E
Значение с плавающей запятой будет выражено в форме ±ddd.ddde±dd, например, 4.995e+01 или 4.995E+01. 
Регистр буквы, обозначающей показатель степени, определяется регистром руны, используемой в качестве аргумента форматирования

g, G 
Значение с плавающей запятой будет выражено в формате e/E для больших показателей степени или в формате f для меньших значений.